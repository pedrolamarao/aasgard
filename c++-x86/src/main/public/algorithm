// Copyright (C) 2012 Pedro Lamar√£o <pedro.lamarao@gmail.com>. All rights reserved.

#pragma once


//! Declarations

namespace std
{

  template <typename Iterator, typename Procedure>
  void for_each (Iterator begin, Iterator end, Procedure procedure) ;

  template <typename Iterator, typename Predicate>
  auto find_if (Iterator begin, Iterator end, Predicate predicate) -> Iterator ;

}

//! Inline definitions

namespace std
{
  template <typename Iterator, typename Procedure>
  void for_each (Iterator begin, Iterator end, Procedure procedure)
  {
    for (auto i = begin; i != end; ++i) procedure(* i);
  }

  template <typename Iterator, typename Predicate>
  auto find_if (Iterator begin, Iterator end, Predicate predicate) -> Iterator
  {
    auto i = begin;
    while (i != end && not(predicate(* i))) ++i;
    return i;
  }
}
