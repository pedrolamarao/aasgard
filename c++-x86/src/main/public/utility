// Copyright (C) 2012 Pedro Lamar√£o <pedro.lamarao@gmail.com>. All rights reserved.

#pragma once

#include <type_traits>


namespace std
{
  template <typename T>
  auto move ( T && t ) -> typename remove_reference<T>::type &&
  {
    return static_cast < typename remove_reference<T>::type && > ( t );
  }

  template <typename T>
  auto forward ( typename remove_reference<T>::type & t ) -> T &&
  {
    return static_cast < T && > ( t );
  }

  template <typename T>
  auto forward ( typename remove_reference<T>::type && t ) -> T &&
  {
    return static_cast < T && > ( t );
  }
}
